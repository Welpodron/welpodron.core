const DELIMITERS=[" (",") ","-","-"],BLOCKS=[1,3,3,2,2],isAndroid=navigator&&/android/i.test(navigator.userAgent),stripDelimiters=t=>(DELIMITERS.forEach(e=>{t=t.replaceAll(e,"")}),t),getPostDelimiter=t=>{let s="";return DELIMITERS.forEach(e=>{t.slice(-e.length)===e&&(s=e)}),s},getPositionOffset=(e,t,s)=>{t=stripDelimiters(t.slice(0,e)),s=stripDelimiters(s.slice(0,e)),e=t.length-s.length;return 0!=e?e/Math.abs(e):0},getFormattedValue=l=>{let a="";return BLOCKS.forEach((e,t)=>{var s,i;0<l.length&&(s=l.slice(0,e),i=l.slice(e),a+=s,s.length===e&&t<BLOCKS.length-1&&(a+=DELIMITERS[t]),l=i)}),a},getNextCursorPosition=(e,t,s)=>t.length===e?s.length:e+getPositionOffset(e,t,s),setSelection=(e,t)=>{element!==document.activeElement||element&&element.value.length<=t||element.setSelectionRange(t,t)};class Input{element;result="";lastInputValue="";isBackward=!1;postDelimiterBackspace="";constructor({element:e}){this.el=e,this.el.addEventListener("focus",this.handleFocus),this.el.addEventListener("keydown",this.handleKeyDown),this.el.addEventListener("input",this.handleInput),e.value&&this.changeValue(e.value)}handleKeyDown=e=>{this.lastInputValue=this.el.value,this.isBackward="Backspace"===e.key};handleFocus=()=>{this.lastInputValue=this.el.value};handleInput=()=>{var e=getPostDelimiter(this.lastInputValue);this.isBackward&&e?this.postDelimiterBackspace=e:this.postDelimiterBackspace="",this.changeValue(this.el.value)};changeValue=e=>{var t=getPostDelimiter(e);this.postDelimiterBackspace&&!t&&(e=e.slice(0,e.length-this.postDelimiterBackspace.length)),e=(e=(e=stripDelimiters(e)).replace(/[^\d]/g,"")).slice(0,11),this.result=getFormattedValue(e);let s=this.el.selectionEnd;if(s=getNextCursorPosition(s,this.el.value,this.result),isAndroid)return setTimeout(()=>{this.el.value=this.result,setSelection(this.el,s)},1);this.el.value=this.result,setSelection(this.el,s)}}export{Input as inputTel};
//# sourceMappingURL=index.min.js.map